version: '3.7'

services:
  lighthouse:
    build: nebula-alpine
    networks:
      private_network:
        ipv4_address: 192.168.42.42
    volumes:
      - ./lighthouse/config.yaml:/config/config.yaml:ro
      - ./lighthouse/pki:/etc/nebula/:ro
      # - ./lighthouse/pki/ca.crt:/etc/nebula/ca.crt:ro
      # - ./lighthouse/pki/lighthouse.crt:/etc/nebula/lighthouse.crt:ro
      # - ./lighthouse/pki/lighthouse.key:/etc/nebula/lighthouse.key:ro
    cap_add:
      - NET_ADMIN
      # - mknod
    devices:
      - /dev/net/tun:/dev/net/tun

  server1:
    build: nebula-alpine
    networks:
      - private_network
    volumes:
      - ./server1/config.yaml:/config/config.yaml:ro
      - ./server1/pki:/etc/nebula/:ro
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

  server2:
    build: nebula-alpine
    networks:
      - private_network
    volumes:
      - ./server2/config.yaml:/config/config.yaml:ro
      - ./server2/pki:/etc/nebula/:ro
      - ./server2/nebula:/etc/init.d/nebula:ro
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # TODO: figure out how to run nebula as a service
    # entrypoint: apk add openrc && /etc/init.d/nebula start && tail -f /dev/null

  nginx1:
    image: nginx:latest
    network_mode: "service:server1"
    volumes:
      - ./nginx1/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx1/default.conf:/etc/nginx/conf.d/default.conf:ro
    #   - ./nginx/ssl:/etc/nginx/ssl:ro
    # Can't publish ports when using network_mode: "service:server1"
    # ports:
    #   - "80:80"
    #   - "443:443"

  # netshoot:
  #   image: benhunter/netshoot:latest
  #   networks:
  #     - private_network
  #   stdin_open: true
  #   tty: true

  # netshoot1:
  #   image: benhunter/netshoot:latest
  #   network_mode: "service:server1"
  #   stdin_open: true
  #   tty: true

  netshoot2:
    image: benhunter/netshoot:latest
    network_mode: "service:server2"
    stdin_open: true
    tty: true

  # ssh:
  #   build:
  #     context: ./ubuntu-ssh
  #     dockerfile: Dockerfile
  #   command: /usr/sbin/sshd -D
  #   volumes:
  #     - ./ubuntu-ssh/sshd_config:/etc/ssh/sshd_config:ro
  #     - ./ubuntu-ssh/ssh_keys:/root/.ssh
  #   ports:
  #     - "2222:22"
  #   networks:
  #     private_network:
  #       ipv4_address: 192.168.42.22

  # ubuntu2:
  #   image: ubuntu:latest
  #   command: tail -f /dev/null
  #   networks:
  #     - private_network
  #     # private_network:
  #       # ipv4_address: 192.168.42.12
  #   cap_add:
  #     - NET_ADMIN
  #   devices:
  #     - /dev/net/tun:/dev/net/tun

networks:
  private_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.42.0/24
